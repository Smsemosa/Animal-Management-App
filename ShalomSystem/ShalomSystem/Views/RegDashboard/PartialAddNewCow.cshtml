@model  ShalomSystem.Models.CattleModel
@using BusinessEntities
@{
    ShalomSystem.Models.CattleModel ac = new ShalomSystem.Models.CattleModel();
 
    
}

<div id="AddNew" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <span class="close">&times;</span>
        <div class="modal-header">
            <h3>Add New  Cattle </h3>

        </div>
        <div class="modal-body">
@*                <script src="~/Scripts/jquery-1.7.1.js"></script>
                <script src="~/Scripts/jquery-2.2.4-min.js"></script>*@
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery-validate-unobtrusive.js"></script>
<link href="~/Scripts/Bootstrap/jquery-ui.css" rel="stylesheet" />
 <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
@*                <script src="~/Scripts/jquery-1.7.1.js"></script>
                <script src="~/Scripts/jquery-2.2.4-min.js"></script>*@
@*                <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
                <script src="~/Scripts/jquery.validate.js"></script>
                <script src="~/Scripts/jquery.validate.min.js"></script>
*@



@*                <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
                <script src="~/Scripts/jquery.validate.js"></script>
                <script src="~/Scripts/jquery.validate.min.js"></script>


                <script src="~/Scripts/jquery-migrate-1.4.1.min.js"></script>
                <script src="~/Scripts/jquery-migrate-1.4.1.js"></script>
              
               
*@




         




            @*  @using (Html.BeginForm("SubmitNew", "RegDashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
             <div class="form-group">
                            <p>Animal ID<span>*</span></p>
                             @Html.LabelFor(m => m.AId)
                             @Html.TextBoxFor(m => m.AId, new { @class = "form-control", id = "AID" ,@readonly="readonly"})
                             @Html.ValidationMessageFor(m => m.AId)
                            
                            <div class="validation"></div>
                        </div>
            <input type="submit" value="OK" />
        }*@

            <script>
                function validateForm() {
                    return $.validator.unobtrusive.parse($('form'));
                }
            </script>


            @using (Ajax.BeginForm("SubmitNew", "RegDashboard", new AjaxOptions
            {
                HttpMethod = "Post",
                OnSuccess = "onNewAnimalSaveSuccess",
                OnBegin = "validateForm",
                OnFailure = "onNewAnimalSaveError"

            },
                                                                new { enctype = "multipart/form-data" }
               ))
            { 
                
                
                @Html.ValidationSummary(true)

                <div class="row">
                
                    <style>
                        .Red {
                            color: red;
                        }
                    </style>
                    <div class="col-lg-3 col-push-3" style="background-color: none; margin-left: 2%">

                        <div class="form-group">
                            <p>
                              System  @Html.LabelFor(m => m.AId, new { @class = "control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.AId, new { @class = "form-control", id = "AIDModal" })
                            @Html.ValidationMessageFor(m => m.AId, "", new { @class = "Red" })

                            <div class="validation"></div>
                        </div>

                        <div class="form-group">
                            <p>
                             National   @Html.LabelFor(m => m.PNationAnimalID, new { @class = "control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.PNationAnimalID, new { @class = "form-control", id = "NAIDModal" })
                            @Html.ValidationMessageFor(m => m.PNationAnimalID, "", new { @class = "Red" })

                            <div class="validation"></div>
                        </div>
                                <div class="form-group">  
                                <p>  @Html.LabelFor(m => m.ADOB, htmlAttributes: new { @class = "control-label " }) </p> 
                                     <div class="form-group">
                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <span class="btn btn-primary " id="calendarBtn1">
                                                    <span id="calendarBtn" class="glyphicon glyphicon-calendar"></span>&hellip;
                                                     @Html.TextBoxFor(m => m.ADOB," ",new {@class = "form-control" })
                                                </span>
                                            </label>
                                       
                                        </div>

                                    </div>
                                      @Html.ValidationMessageFor(model => model.ADOB, "", new { @class = "text-danger" })
                                      

                                      <script>
                                       
                                          $("#calendarBtn1").click(function () {
                                              
                                              $("#ADOB").datepicker
                                                  ({
                                                      onSelect: function (dateText, inst)
                                                      {
                                                          var date = $(this).val();
                                                         /// alert(date)
                                                          $('#ADOB').val(date);
                                                          
                                                      }
                                                  });
                                          });
                                          $("#calendarBtn").click(function () {

                                              $("#ADOB").datepicker
                                                  ({
                                                      onSelect: function (dateText, inst) {
                                                          var date = $(this).val();
                                                         // alert(date)
                                                          $('#ADOB').val(date);

                                                      }
                                                  });
                                          });

                                       
                                      </script>
                                      
                                        

                                </div>
                       
  


                      @*  <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.CId, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CId, new { @class = "form-control", id = "cattleid", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.CId, "", new { @class = "Red" })
                            <div class="validation"></div>
                        </div>*@

                        <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.ABreed, new { @class = " control-lable" })
                            </p>
                            @{List<SelectListItem> breedType = ac.GetBreedType();}
                            @Html.DropDownListFor(model => model.ABreed, breedType, "-- Select Breed --", new { @class = "form-control", id = "Abreedtype" })
                            @Html.ValidationMessageFor(m => m.ABreed, "", new { @class = "Red" })
                            <div class="validation"></div>
                        </div>

                        <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.AGender, new { @class = " control-lable" })
                            </p>
                            @{List<SelectListItem> gender = ac.GetGender();}
                            @Html.DropDownListFor(model => model.AGender, gender, "-- Select Gender --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.AGender, "", new { @class = "Red" })
                            <div class="validation"></div>
                        </div>
                          <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.Status, new { @class = " control-lable" })
                            </p>


                            @{List<SelectListItem> statusType = ac.GetStatus();}
                            @Html.DropDownListFor(model => model.Status, statusType, "-- Select Status --", new { @class = "form-control", id = "Status" })
                            @Html.ValidationMessageFor(m => m.Status, "", new { @class = "Red" })
                        </div>

                   @*     <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.AAge, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.AAge, new { @class = "form-control", id = "age" })
                            @Html.ValidationMessageFor(m => m.AAge, "", new { @class = "Red" })
                            <div class="validation"></div>
                        </div>*@

                       @* <div class="form-group">
                            <p>
                            @Html.LabelFor(m => m.Dob, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.Dob,"{0:dd/MM/yyyy}" ,new { @class = "form-control", id = "dob" })
                            @Html.ValidationMessageFor(m => m.Dob, "", new { @class = "Red" })
                            <div class="validation"></div>
                        </div>*@

                      

                    </div>

                    <div class="col-lg-4 col-pull-7" style="background-color: none; margin-left: 2%">



                          <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.CColor, new { @class = " control-lable" })
                            </p>


                            @{List<SelectListItem> colourType = ac.GetColourType();}
                            @Html.DropDownListFor(model => model.CColor, colourType, "-- Select Colour --", new { @class = "form-control", id = "CColor", required = "required" })
                            @Html.ValidationMessageFor(m => m.CColor, "", new { @class = "Red" })
                        </div>

                        <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.CScotralSize, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CScotralSize, "0", new { @class = "form-control", id = "scotralsize" })
                            @Html.ValidationMessageFor(m => m.CScotralSize, "", new { @class = "Red" })
                        </div>

                      

                        <div class="form-group">
                            <p>
                                @Html.LabelFor(m => m.CBreedingStatus, new { @class = " control-lable" })
                            </p>


                            @{List<SelectListItem> breedingstatusType = ac.GetBreedingStatus();}

                            @Html.DropDownListFor(model => model.CBreedingStatus, breedingstatusType, "-- Select Breeding Status --", new { @class = "form-control", id = "breedingStatus" })
                            @Html.ValidationMessageFor(m => m.CBreedingStatus, "", new { @class = "Red" })
                        </div>

                        <div class="form-group">
                           @{
                               List<SelectListItem> FatherID = ac.GetFatherID(int.Parse(TempData["UserID"].ToString()));
                               TempData.Keep("UserID");
                             }
                            <p>@Html.LabelFor(m => m.CParentFId, new { @class = " control-lable" })</p>
                            @*@Html.TextBoxFor(m => m.CParentFId, "cm", new { @class = "form-control", id = "parentIdF" })*@
                            @Html.DropDownListFor(model => model.CParentFId,FatherID, "--Select Parent--", new { @class = "form-control"})
                           
                            @Html.ValidationMessageFor(m => m.CParentFId, "", new { @class = "Red" })
                        </div>

                        <div class="form-group">
                            @{List<SelectListItem> MotherID = ac.GetMotherID(int.Parse(TempData["UserID"].ToString()));
                              
                              TempData.Keep("UserID");
                              }

                            <p>@Html.LabelFor(m => m.CParentMId, new { @class = " control-lable" })</p>
                            @*@Html.TextBoxFor(m => m.CParentMId, "cm", new { @class = "form-control", id = "parentIdM" })*@
                            @Html.DropDownListFor(model => model.CParentMId,MotherID, "--Select Parent--", new { @class = "form-control"})
                            @Html.ValidationMessageFor(m => m.CParentMId, "", new { @class = "Red" })
                        </div>
                        <div class="form-group">
                            <p>@Html.LabelFor(m => m.CFrameSize, new { @class = " control-lable" })</p>
                            @{List<SelectListItem> frameSizeType = ac.GetFrameSize();}
                            @Html.DropDownListFor(model => model.CFrameSize, frameSizeType, "-- Select Frame Size --", new { @class = "form-control", id = "frameSz" })
                            @Html.ValidationMessageFor(m => m.CFrameSize, "", new { @class = "Red" })
                        </div>

                    </div>
                    <div class="col-lg-4 col-push-3" style="background-color: none; margin-left: 3%">

                        <div class="row">



                         @*   <div class="form-group col-xs-6">
                                <p>@Html.LabelFor(m => m.OId, new { @class = "control-lable" })</p>
                                @Html.TextBoxFor(m => m.OId, "cm", new { @class = "form-control", id = "CattleSeq" })
                                @Html.ValidationMessageFor(m => m.OId, "", new { @class = "Red" })
                            </div>*@

                         
                            @{
                              
                               Model.PId = int.Parse(TempData["UserID"].ToString());
                               TempData.Keep("UserID");
                              }

                            <div class="form-group col-xs10">
                                <p>@Html.LabelFor(m => m.PId, new { @class = "ccontrol-lable" })</p>
                                @Html.TextBoxFor(m => m.PId, "", new { @class = "form-control"})
                                @Html.ValidationMessageFor(m => m.PId, "", new { @class = "Red" })
                            </div>
                           
                            <p>Owner Full name <span></span></p>
                            <div class="form-group col-xs-6">
                               @{
                                    Model.PName = TempData["Uname"].ToString();
                                    TempData.Keep("Uname");
                                }
                                @Html.TextBoxFor(m => m.PName,"" , new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.PName, "", new { @class = "Red" })

                            </div>
                            <div class="form-group col-xs-6">
                               @{
                                   Model.PSurname = TempData["USname"].ToString();
                                   TempData.Keep("USname");
                                }
                                @Html.TextBoxFor(m => m.PSurname, "", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.PSurname, "", new { @class = "Red" })
                            </div>
                            <br />





                            <div class="form-group">
                                <p>Upload Profile Picture  <span></span></p>
                                <img src="" id="uploadedImage" class="img-responsive" style="max-width: 350px; max-height: 250px; min-width: 300px; min-height: 180px" />
                                @Html.TextBoxFor(m => m.Imagebase64, new { @class = "form-control hidden", id = "uploadedBinary" })
                                @Html.ValidationMessageFor(m => m.Imagebase64, "", new { @class = "Red" })
                            </div>




                            <div class="form-group">
                                <div class="input-group">
                                    <label class="input-group-btn">
                                        <span class="btn btn-primary ">
                                            <span class="glyphicon glyphicon-upload"></span>Browse&hellip;
                                            <input id="file" name="file" type="file" style="display: none;">
                                        </span>
                                    </label>
                                    <input type="text" class="form-control" readonly="">
                                </div>

                            </div>



                            @*//upload image js script*@
                            <script>
                                $('#file').change(function (event) {
                                    var pathBin = "";
                                    // We can attach the `fileselect` event to all file inputs on the page
                                    $(document).on('change', ':file', function () {
                                        var input = $(this);
                                        var numFiles = input.get(0).files ? input.get(0).files.length : 1;

                                        var label = input.val().replace(/\\/g, '/').replace(/.*\//, '');

                                        input.trigger('fileselect', [numFiles, label]);

                                    });

                                    // We can watch for our custom `fileselect` event like this
                                    var count = 0;
                                    if (count < 1) {
                                        $(':file').on('fileselect', function (event, numFiles, label) {

                                            if (count < 1) {

                                                var input = $(this).parents('.input-group').find(':text');
                                                //uses tenary operators
                                                var log = numFiles > 1 ? numFiles + ' files selected' : label;

                                                if (log) {

                                                    count++;

                                                    if (input.length) {
                                                        pathBin = log
                                                        console.log(pathBin);

                                                        //extension viable in this application
                                                        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
                                                        var ff = (pathBin).split('.')

                                                        var i;
                                                        var state = false;

                                                        //check file extention ang give user feed back 
                                                        for (i = 0; i < fileExtension.length; i++) {

                                                            if (ff[ff.length - 1] + '' === fileExtension[i] + '') {

                                                                state = true; input.val(log);
                                                                break;
                                                            }
                                                            else if (Number(i) == Number(fileExtension.length - 1) && state + "" === "false") {
                                                                input.val("");
                                                                toastr.error("Select the Correct file type: [eg] " + fileExtension)
                                                            }

                                                        }
                                                        state = false;

                                                    } else {
                                                        if (log) { };
                                                    }
                                                }
                                            }
                                        });
                                    }
                                    else {
                                        // alert("No access");
                                    }


                                    var r = URL.createObjectURL(event.target.files[0]);
                                    var canvas = document.createElement("canvas");
                                    var ctx = canvas.getContext("2d");
                                    var img = new Image();

                                    img.onload = function () {
                                        //divide the size of image to make it smaller
                                        var w = img.width / 2;
                                        var h = img.height / 2;

                                        //image size
                                        canvas.width = w;
                                        canvas.height = h;

                                        //final drawing of image after resize
                                        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);



                                        var data = canvas.toDataURL("image/jpeg");

                                        //display images 
                                        $("#uploadedImage").fadeIn("fast").attr('src', data);
                                        //image path
                                        $("#uploadedBinary").fadeIn("fast").attr('value', data);
                                        //display image 
                                        //  $("#mmm").fadeIn("fast").attr('src', data);
                                    };
                                    img.src = r;
                                });
                            </script>

                        </div>

                    </div>
                </div>
                <hr />
             
             
                <div class="row" style="background-color: none">
                    <div class="col-lg-3">


                        <p style="color: orangered;">WEIGHT <span></span></p>
                        <div class="form-group">

                            <p>

                                @Html.LabelFor(m => m.CBirthWeight, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CBirthWeight, "0", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CBirthWeight, "", new { @class = "Red" })
                        </div>
                        <div class="form-group">

                            <p>

                                @Html.LabelFor(m => m.CWeaningWeight, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CWeaningWeight, "0", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CWeaningWeight, "", new { @class = "Red" })
                        </div>

                        <div class="form-group">
                            <p>

                                @Html.LabelFor(m => m.CPostWeaningWeight, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CPostWeaningWeight, "0", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CPostWeaningWeight, "", new { @class = "Red" })
                        </div>
                    </div>
                    <div class="col-lg-3">

                        <p style="color: orangered;">_ <span></span></p>
                        <div class="form-group">

                            <p>
                                @Html.LabelFor(m => m.CAdultSxWeight, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CAdultSxWeight, "0", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CAdultSxWeight, "", new { @class = "Red" })

                        </div>


                        <div class="form-group">

                            <p>
                                @Html.LabelFor(m => m.CCurrentAdultWeight, new { @class = " control-lable" })
                            </p>
                            @Html.TextBoxFor(m => m.CCurrentAdultWeight, "0", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CCurrentAdultWeight, "", new { @class = "Red" })

                        </div>

                        <div class="form-group">

                            <p>
                                @Html.LabelFor(m => m.CCurrentWeightDateTaken, new { @class = " control-lable" })
                            </p>
                            

                              <div class="form-group">
                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <span class="btn btn-primary " id="calendarWBtn1">
                                                    <span id="calendarWBtn" class="glyphicon glyphicon-calendar"></span>&hellip;
                                                   @Html.TextBoxFor(m => m.CCurrentWeightDateTaken, " ", new { @class = "form-control" })
                                                </span>
                                            </label>
                                       
                                        </div>

                                    </div>
                            @Html.ValidationMessageFor(m => m.CCurrentWeightDateTaken, "", new { @class = "Red" })
                              <script>

                                  $("#calendarWBtn1").click(function () {

                                      $("#CCurrentWeightDateTaken").datepicker
                                          ({
                                              onSelect: function (dateText, inst) {
                                                  var date = $(this).val();
                                                  /// alert(date)
                                                  $('#CCurrentWeightDateTaken').val(date);

                                              }
                                          });
                                  });
                                  $("#calendarWBtn").click(function () {

                                      $("#CCurrentWeightDateTaken").datepicker
                                          ({
                                              onSelect: function (dateText, inst) {
                                                  var date = $(this).val();
                                                  // alert(date)
                                                  $('#CCurrentWeightDateTaken').val(date);

                                              }
                                          });
                                  });


                                      </script>

                        </div>




                    </div>
                    <div class="col-lg-2">
                  
                        --------
                    </div>
                    <div class="col-lg-4">
                       
                            <p>
                                @Html.LabelFor(m => m.CDiagnoses, new { @class = " control-lable" })
                            </p>
                            @Html.TextAreaFor(m => m.CDiagnoses,5,5, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CDiagnoses, "", new { @class = "Red" })


                    </div>
                </div>
                <hr />
                <div class="row">
                           @Html.TextBoxFor(m => m.PName, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PSurname, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.Dob, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PGender, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PAreaCode, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PAddress, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PPhoneNum, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PUserAccess, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PProvinceName, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PCityName, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PCountryname, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PContinent, "", new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.PGpsCoOrdinatesLat, "", new { @class = "form-control hidden" })                    
                            @Html.TextBoxFor(m => m.PGpsCoOrdinatesLong, "", new { @class = "form-control hidden" })                    
                                               
                                      

                </div>
                <div class="row">
                    stervanos app
                </div>



                <button type="submit" value="Save" class="btn btn-success  btn-sq-lg  custom  glyphicon  glyphicon-upload pull-right">
                    Save
                </button>
                <br />
                <br />
            }

            <script>

                function onNewAnimalSaveSuccess(data)
                {
                    var ftr = $("#AIDModal").val()

                    if (data == ftr)
                    {
                        toastr.success("! saved:" + data)

                        var modal = document.getElementById('AddNew');
                        modal.style.display = "none";
                        location.reload();

                    }
                    else
                    {
                        toastr.error("! Validation :" + data)
                    }


                }
                function onNewAnimalSaveError(data)
                {
                    toastr.error("! " + data)

                }
            </script>
        </div>
        <div class="modal-footer">
            @*@Html.ActionLink(" Reset", "LogIndex", "LoginUser", null, new { id = "Deletebtn", @class = "btn btn-warning  btn-sq-lg  custom glyphicon glyphicon-trash pull-right"})*@
            @*@Html.ActionLink(" Save 1", "LogIndex", "LoginUser", null, new { id = "Updatebtn", @class = "btn btn-success  btn-sq-lg  custom glyphicon  glyphicon-upload" })*@


            ---------------------------------------


         

        </div>

    </div>
</div>

<script>

    var modal = document.getElementById('AddNew');
    var span = document.getElementsByClassName("close")[0];
    $("document").ready(function () {

        modal.style.display = "block";



    });
    span.onclick = function () {

        modal.style.display = "none";

        //reloads the page when modal is closed
        location.reload();
     
    }


</script>
